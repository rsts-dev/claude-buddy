name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        include:
          # Primary test combinations (LTS versions)
          - os: ubuntu-latest
            node-version: 18
          - os: ubuntu-latest  
            node-version: 20
          # Cross-platform compatibility check
          - os: macos-latest
            node-version: 20
          - os: windows-latest
            node-version: 20
          # Latest Node.js version test
          - os: ubuntu-latest
            node-version: 22

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'setup/package-lock.json'

      - name: Install dependencies
        run: cd setup && npm ci

      - name: Run tests
        run: cd setup && npm test

      - name: Test build
        run: |
          mkdir -p dist
          cp setup/install.js dist/
          cp setup/package.json dist/
          cp -r setup/lib dist/

      - name: Test CLI installation (Unix)
        if: runner.os != 'Windows'
        run: |
          node setup/install.js --help
          # Test that the CLI can show help without errors

      - name: Test CLI installation (Windows)
        if: runner.os == 'Windows'
        run: |
          node setup/install.js --help
        shell: cmd

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'setup/package-lock.json'

      - name: Install dependencies
        run: cd setup && npm ci

      - name: Run linting
        run: cd setup && npm run lint

  security:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'setup/package-lock.json'

      - name: Install dependencies
        run: cd setup && npm ci

      - name: Run security audit
        run: cd setup && npm audit --audit-level=moderate

      - name: Check for vulnerable dependencies
        run: cd setup && npm audit --audit-level=high